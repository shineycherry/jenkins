pipeline {
    agent any
    
    stages {
        stage('Build') {
            steps {
                script {
                    echo 'Building the code...'
                    sh 'mvn clean package' // Maven build
                }
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                script {
                    echo 'Running unit tests...'
                    sh 'mvn test' // JUnit for unit tests
                    echo 'Running integration tests...'
                    sh 'mvn verify' // Integration tests (e.g., with Selenium)
                }
            }
        }
        
        stage('Code Analysis') {
            steps {
                script {
                    echo 'Running code analysis...'
                    sh 'sonar-scanner' // SonarQube for code analysis
                }
            }
        }
        
        stage('Security Scan') {
            steps {
                script {
                    echo 'Performing security scan...'
                    sh 'zap-cli --zap-url http://localhost --scan' // OWASP ZAP for security scanning
                }
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                script {
                    echo 'Deploying to staging server...'
                    sh 'aws deploy create-deployment --application-name MyApp --deployment-group Staging --s3-location s3://my-bucket/my-app.zip --region us-east-1' // AWS CLI for deployment
                }
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                script {
                    echo 'Running integration tests on staging...'
                    sh 'newman run my-collection.json' // Postman (Newman) for API testing
                }
            }
        }
        
        stage('Deploy to Production') {
            steps {
                script {
                    echo 'Deploying to production server...'
                    sh 'aws deploy create-deployment --application-name MyApp --deployment-group Production --s3-location s3://my-bucket/my-app.zip --region us-east-1' // AWS CLI for deployment
                }
            }
        }
    }
    
    post {
        success {
            emailext body: "Pipeline successfully completed!",
                     subject: "Pipeline Status: SUCCESS",
                     to: "indrajapolkampalli@gmail.com"
        }
        failure {
            emailext body: "Pipeline failed to complete.",
                     subject: "Pipeline Status: FAILURE",
                     to: "indrajapolkampalli@gmail.com"
        }
    }
}
